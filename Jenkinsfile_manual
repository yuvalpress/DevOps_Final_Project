pipeline {
    agent any
    parameters {
        choice(
            choices: ["3", "2", "1"],
            description: 'Declares which task will run',
            name: 'RUN_TASK')
    }
    stages {
        stage('Run rest_app.py') {
            steps {
                script {
                    bat 'start/min python rest_app.py'
                }
            }
        }
        stage('Run web_app.py') {
            steps {
                script {
                    bat 'start/min python web_app.py'
                }
            }
        }
        stage('Run backend_testing.py') {
            steps{
                when {
                    // if the RUN_TASK parameter is "2"
                    expression { params.RUN_TASK == 2 }
                }
                script{
                    bat 'start/min python backend_testing.py'
                }
            }
        }
        stage('Run frontend_testing.py') {
            steps{
                when {
                    // if the RUN_TASK parameter is "1"
                    expression { params.RUN_TASK == 1 }
                }
                script{
                    bat 'start/min python backend_testing.py'
                }
            }
        }
        stage('Run combined_testing.py') {
            when {expression { params.RUN_TASK == 3 }}
            steps{
                script{
                    bat 'start/min python combined_testing.py'
                }
            }
        }
        stage('Run clean_environment.py') {
            steps{
                script{
                    bat 'start/min python clean_environment.py'
                }
            }
        }
    }
    post {
        failure {
            emailext body: 'Pipeline has failed.',
            recipientProviders: [[$class: 'DevelopersRecipientProvider'],
            [$class: 'RequesterRecipientProvider']], subject: 'Test'
        }
    }
}